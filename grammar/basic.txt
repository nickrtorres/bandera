<program>    ::= <stmt_list> <end> halt

<stmt_list>  ::= <procedure> <instr_list>
<stmt_list>  ::= <instr_list>

<end>        ::= end iden

# NB: `ret` without an integer is syntactic sugar for `ret 0`.
<procedure>  ::= iden proc <instr_list> ret iden endp
<procedure>  ::= iden proc <instr_list> ret [0-9]+ iden endp

<instr_list> ::= <label> <instr>
<instr_list> ::= <label> <instr> <instr_list>
<instr_list> ::= <instr> <instr_list>
<instr_list> ::= <instr>

<instr>      ::= <add>
<instr>      ::= <call>
<instr>      ::= <cmp>
<instr>      ::= <jump>
<instr>      ::= <mov>
<instr>      ::= <push>

<add>        ::= add reg unsigned_imm
<add>        ::= add reg signed_imm
<add>        ::= add reg reg

<call>       ::= call iden

<cmp>        ::= cmp reg signed_imm
<cmp>        ::= cmp reg unsigned_imm
<cmp>        ::= cmp reg reg

<jump>       ::= jmp iden
<jump>       ::= jne iden
<jump>       ::= je iden

<mov>        ::= mov reg unsigned_imm
<mov>        ::= mov reg signed_imm
<mov>        ::= mov reg reg
<mov>        ::= mov reg mem

<push>       ::= push reg

<mem>        ::= word ptr [ reg ]
<mem>        ::= word ptr [ reg + offset ]
<mem>        ::= word ptr [ reg - offset ]
